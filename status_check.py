#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º Discord –±–æ—Ç–∞
"""

import requests
import json
import subprocess
import sys
from pathlib import Path
from datetime import datetime

def check_bot_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞"""
    try:
        response = requests.get("http://localhost:8080/health", timeout=5)
        if response.status_code == 200:
            return True, "–ë–æ—Ç –∑–¥–æ—Ä–æ–≤"
        else:
            return False, f"HTTP —Å—Ç–∞—Ç—É—Å {response.status_code}"
    except Exception as e:
        return False, f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}"

def check_permanent_host():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞"""
    status_file = Path("bot_status.json")
    if status_file.exists():
        try:
            with open(status_file, 'r') as f:
                status = json.load(f)
            return status.get('running', False), f"PID: {status.get('pid', 'N/A')}"
        except Exception as e:
            return False, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}"
    else:
        return False, "–§–∞–π–ª —Å—Ç–∞—Ç—É—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"

def check_token():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞"""
    token_file = Path("token.txt")
    if token_file.exists():
        try:
            token = token_file.read_text().strip()
            if len(token) > 50:
                return True, f"–¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω ({len(token)} —Å–∏–º–≤–æ–ª–æ–≤)"
            else:
                return False, "–¢–æ–∫–µ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π"
        except Exception as e:
            return False, f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}"
    else:
        return False, "–§–∞–π–ª token.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Discord –±–æ—Ç–∞")
    print("=" * 50)
    
    checks = [
        ("–¢–æ–∫–µ–Ω Discord", check_token),
        ("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ö–æ—Å—Ç", check_permanent_host),
        ("–ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Ç–∞", check_bot_health),
    ]
    
    all_good = True
    
    for name, check_func in checks:
        try:
            is_ok, message = check_func()
            status = "‚úÖ" if is_ok else "‚ùå"
            print(f"{status} {name}: {message}")
            if not is_ok:
                all_good = False
        except Exception as e:
            print(f"‚ùå {name}: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ - {e}")
            all_good = False
    
    print("=" * 50)
    
    if all_good:
        print("üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")
        print("üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8080")
        return 0
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")
        return 1

if __name__ == "__main__":
    sys.exit(main())